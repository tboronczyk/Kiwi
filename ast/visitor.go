package ast

type Visitor interface {
	VisitAddNode(*AddNode)
	VisitAndNode(*AndNode)
	VisitAssignNode(*AssignNode)
	VisitBoolNode(*BoolNode)
	VisitCastNode(*CastNode)
	VisitDivideNode(*DivideNode)
	VisitEqualNode(*EqualNode)
	VisitFuncCallNode(*FuncCallNode)
	VisitFuncDefNode(*FuncDefNode)
	VisitGreaterEqualNode(*GreaterEqualNode)
	VisitGreaterNode(*GreaterNode)
	VisitIfNode(*IfNode)
	VisitLessEqualNode(*LessEqualNode)
	VisitLessNode(*LessNode)
	VisitModuloNode(*ModuloNode)
	VisitMultiplyNode(*MultiplyNode)
	VisitNegativeNode(*NegativeNode)
	VisitNotEqualNode(*NotEqualNode)
	VisitNotNode(*NotNode)
	VisitNumberNode(*NumberNode)
	VisitOrNode(*OrNode)
	VisitPositiveNode(*PositiveNode)
	VisitProgramNode(*ProgramNode)
	VisitReturnNode(*ReturnNode)
	VisitStringNode(*StringNode)
	VisitSubtractNode(*SubtractNode)
	VisitVariableNode(*VariableNode)
	VisitWhileNode(*WhileNode)
}
